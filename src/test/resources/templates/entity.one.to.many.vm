#foreach($ass in ${type.getOneToMany()})
#if(${ass.isOwner()})

    /**
     * Get the ${ass.name}List of the ${type.name}
     * @return ${ass.name}List
     * @see List
     * @see ${ass.entity.name}
     */
    public List<${ass.entity.name}> get${util.capitalize(${ass.name})}List() {
        if(${ass.name}List == null) {
            ${ass.name}List = new ArrayList<${ass.entity.name}>();
        }
        return ${ass.name}List;
    }

    /**
     * Set the ${ass.name}List of the ${type.name}
     * @param ${ass.name}List The ${ass.name} list
     * @see List
     * @see ${ass.entity.name}
     */
    public void set${util.capitalize(${ass.name})}List(List<${ass.entity.name}> ${ass.name}List) {
        this.${ass.name}List = ${ass.name}List;
    }


    /**
     * Add a ${ass.entity} to the ${ass.name}List of the ${type.name}
     * @param ${util.uncapitalize(${ass.entity.name})} The ${ass.entity.name} to add
     * @see ${ass.entity.name}
     */
    public void add${util.capitalize(${ass.name})}(${ass.entity} ${util.uncapitalize(${ass.entity.name})}) {
        get${util.capitalize(${ass.name})}List().add(${util.uncapitalize(${ass.entity.name})});
    }
#else

    /**
     * Get the ${ass.name} of the ${type.name}
     * @return ${ass.name}
     * @see ${ass.entity.name}
     */
    public ${ass.entity.name} get${util.capitalize(${ass.name})}() {
        return ${ass.name};
    }

    /**
     * Set the ${ass.name} of the ${type.name}
     * @param ${ass.name} The ${ass.name}
     * @see ${ass.entity.name}
     */
    public void set${util.capitalize(${ass.name})}(${ass.entity.name} ${ass.name}) {
        this.${ass.name} = ${ass.name};
    }
#end
#end